---
title: "Draft Quarto document"
author: "Your Name"
format: html
editor:
    markdown: 
      wrap: 72
      canonical: true
---

```{r setup}
targets::tar_config_set(store = here::here("_targets"))
library(tidyverse)
library(targets)
library(tidymodels)
source(here::here("R/functions.R"))
lipidomics <- tar_read(lipidomics)
```

## Results

```{r}
tar_read(df_stats_by_metabolite) %>%
  mutate(MeanSD = glue::glue("{value_mean} ({value_sd})")) %>%
  select(Metabolite = metabolite, `Mean (SD)` = MeanSD) %>%
  knitr::kable(caption = "Descriptive statistics of the metabolites")
```

```{r}
tar_read(fig_metabolite_distribution)
```

## Building the model

```{r}
log_reg_specs <- logistic_reg() %>%
  set_engine("glm")
log_reg_specs

lipidomics_wide <- lipidomics %>%
  column_values_to_snake_case(metabolite) %>%
  metabolites_to_wider()

lipidomics_wide
```

```{r}
recipe_specs <- lipidomics_wide %>%
  create_recipe_spec(metabolite_cholesterol)
recipe_specs
```

```{r}
create_model_workflow(
  logistic_reg() %>%
    set_engine("glm"),
  lipidomics_wide %>%
    create_recipe_spec(metabolite_cholesterol)
) %>%
  fit(lipidomics_wide) %>%
  tidy_model_output()
```

## Running multiple models

```{r}
model_estimates <- lipidomics %>%
  split_by_metabolite() %>%
  map(generate_model_results) %>%
  list_rbind() %>%
  filter(str_detect(term, "metabolite_"))
```

```{r}
#' Generate the results of a model
#'
#' @param data The lipidomics dataset
#'
#' @return A data frame
#'
generate_model_results <- function(data) {
  create_model_workflow(
    parsnip::logistic_reg() %>%
      parsnip::set_engine("glm"),
    data %>%
      create_recipe_spec(tidyselect::starts_with("metabolite_"))
  ) %>%
    parsnip::fit(data) %>%
    tidy_model_output()
}
```

```{r}
#' Adding the original metabolite names
#'
#' @param model_results The results model
#' @param data The lipidomics dataset
#'
#' @return A data frame
#'
add_origional_metabolite_names <- function(model_results, data) {
  data %>%
    dplyr::mutate(term = metabolite) %>%
    column_values_to_snake_case(term) %>%
    dplyr::mutate(term = stringr::str_c("metabolite_", term)) %>%
    dplyr::distinct(term, metabolite) %>%
    dplyr::right_join(model_results, by = "term")
}
```

```{r}
#' Calculate the estimates for the model for each metabolite.
#'
#' @param data The lipidomics dataset.
#'
#' @return A data frame.
#'
calculate_estimates <- function(data) {
  data %>%
    column_values_to_snake_case(metabolite) %>%
    dplyr::group_split(metabolite) %>%
    purrr::map(metabolites_to_wider) %>%
    purrr::map(generate_model_results) %>%
    purrr::list_rbind() %>%
    dplyr::filter(stringr::str_detect(term, "metabolite_")) %>%
    add_original_metabolite_names(data)
}
```
